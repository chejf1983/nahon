/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package forge.form.seteia;

import forge.bill.dev.NahonDevControl;
import forge.bill.eia.builder.NahonDevMap;
import forge.bill.eia.builder.SEiaRecord;
import forge.form.other.EiaTableModel;
import forge.bill.platform.ForgeSystem;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.table.TableCellEditor;
import nahon.drv.data.EquipmentInfo;

/**
 *
 * @author jiche
 */
public class EIASetupPane extends javax.swing.JPanel {

    /**
     * Creates new form UpdateForm
     */
    java.awt.Frame parent = null;

    public EIASetupPane(java.awt.Frame parent) {
        this.parent = parent;

        initComponents();

        initInternalForm();
    }

    private JComboBox devnamelist;

    //初始化内部版本界面
    private void initInternalForm() {
        //设置默认设备名称下拉列表
        devnamelist = new JComboBox();
        for (NahonDevMap.DevType type : NahonDevMap.DevType.values()) {
            devnamelist.addItem(NahonDevMap.GetName(type));
        }
        devnamelist.setEditable(true);
        devnamelist.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    //重新选择设备名称后,更新设备表格中设备名称
                    EquipmentInfo eia = ((EiaTableModel) devEiaTable.getModel()).GetEIAInfo();
                    eia.DeviceName = devnamelist.getSelectedItem().toString();
                    devEiaTable.setModel(new EiaTableModel(eia));
                }
            }
        });

        //更新eia信息框
        this.devEiaTable = new JTable() {
            @Override
            public TableCellEditor getCellEditor(int row, int column) {
                if (row == 0 && column == 1) {
                    return new DefaultCellEditor(devnamelist);
                } else {
                    return super.getCellEditor(row, column);
                }
            }

        };
        this.eiaTablePane.setViewportView(devEiaTable);

        this.Button_BuildSerial.setVisible(true);
        this.Button_EiaBuildConfig.setVisible(true);
        this.TextField_company.setVisible(true);
        this.jLabel3.setVisible(true);
    }

    //更新EIA信息
    public void UpdateEIA() {
        devEiaTable.setModel(new EiaTableModel(ForgeSystem.GetInstance().devControl.GetEquipmentInfo()));
        this.TextField_DevAddr.setText(String.valueOf(ForgeSystem.GetInstance().devControl.GetDevAddr()));
        //外部版本，不更新出厂信息
        SEiaRecord record = ForgeSystem.GetInstance().devControl.GetInfomation();
        if (record != null) {
            this.TextField_company.setText(record.company);
        }
    }

    //转换输入的设备地址
    private byte getInputAddr() {
        try {
            return Byte.valueOf(this.TextField_DevAddr.getText());
        } catch (Exception ex) {
            this.TextField_DevAddr.setText("0");
            return (byte) 0;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        InfoList = new javax.swing.JList();
        DevicePanel = new javax.swing.JPanel();
        Button_Set = new javax.swing.JButton();
        eiaTablePane = new javax.swing.JScrollPane();
        devEiaTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextField_DevAddr = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TextField_company = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea_Info = new javax.swing.JTextArea();
        Button_EiaBuildConfig = new javax.swing.JButton();
        Button_BuildSerial = new javax.swing.JButton();
        Button_OpenPath = new javax.swing.JButton();

        InfoList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(InfoList);

        DevicePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("设备参数修改"));

        Button_Set.setText("设置");
        Button_Set.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_SetActionPerformed(evt);
            }
        });

        devEiaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "EIA信息", "值"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        eiaTablePane.setViewportView(devEiaTable);

        jLabel1.setText("原始信息：");

        jLabel2.setText("设备地址：");

        TextField_DevAddr.setText("1");

        jLabel3.setText("备注：");

        TextArea_Info.setColumns(20);
        TextArea_Info.setRows(5);
        jScrollPane1.setViewportView(TextArea_Info);

        Button_EiaBuildConfig.setText("数据库配置");
        Button_EiaBuildConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_EiaBuildConfigActionPerformed(evt);
            }
        });

        Button_BuildSerial.setText("创建序列号");
        Button_BuildSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_BuildSerialActionPerformed(evt);
            }
        });

        Button_OpenPath.setText("打开备注表");
        Button_OpenPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_OpenPathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DevicePanelLayout = new javax.swing.GroupLayout(DevicePanel);
        DevicePanel.setLayout(DevicePanelLayout);
        DevicePanelLayout.setHorizontalGroup(
            DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(eiaTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DevicePanelLayout.createSequentialGroup()
                .addComponent(Button_EiaBuildConfig)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Button_OpenPath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Button_Set, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(DevicePanelLayout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextField_company))
            .addGroup(DevicePanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addContainerGap(244, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addGroup(DevicePanelLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextField_DevAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Button_BuildSerial))
        );
        DevicePanelLayout.setVerticalGroup(
            DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DevicePanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eiaTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_company, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_DevAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button_BuildSerial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button_Set)
                    .addComponent(Button_EiaBuildConfig)
                    .addComponent(Button_OpenPath)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DevicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DevicePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    //下发eia，并且记录出场信息
    private void Button_SetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_SetActionPerformed
        //检查状态
        if (ForgeSystem.GetInstance().devControl.State() == NahonDevControl.ControlState.UPDATE) {
            TextArea_Info.setText("请先等待设备升级完成! \r\n");
            return;
        }

        if (ForgeSystem.GetInstance().devControl.SetDevAddr(this.getInputAddr())) {
            TextArea_Info.setText("设备地址更新成功! \r\n");
        } else {
            TextArea_Info.setText("设备地址更新失败! \r\n");
            return;
        }

        //获取新的eia信息
        EquipmentInfo neweia = ((EiaTableModel) this.devEiaTable.getModel()).GetEIAInfo();

        //连接状态下才可以下发设备信息和设备地址
        if (ForgeSystem.GetInstance().devControl.SetEquipmentInfo(neweia)) {
            TextArea_Info.setText(TextArea_Info.getText() + "信息设置到设备成功! \r\n");
            
            if (ForgeSystem.GetInstance().devControl.SetInformation(
                    new SEiaRecord(neweia.DeviceName,
                            neweia.BuildSerialNum,
                            this.TextField_company.getText(),
                            "", ""))) 
            {
                TextArea_Info.setText(TextArea_Info.getText() + "保存备注信息成功 \r\n");
            } else {
                TextArea_Info.setText(TextArea_Info.getText() + "保存备注信息失败 \r\n");
            }
        } else {
            TextArea_Info.setText(TextArea_Info.getText() + "设置EIA失败 \r\n");
        }
    }//GEN-LAST:event_Button_SetActionPerformed

    //配置数据库
    private void Button_EiaBuildConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_EiaBuildConfigActionPerformed
        DBConfig dbconfig = new DBConfig(this.parent, false);
        dbconfig.SetDBIntance(ForgeSystem.GetInstance().eiaBuilder);
        dbconfig.setVisible(true);
    }//GEN-LAST:event_Button_EiaBuildConfigActionPerformed

    //生成序列号
    private void Button_BuildSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_BuildSerialActionPerformed
        //根据eia的设备名称获取设备类型
        EquipmentInfo eia = ((EiaTableModel) devEiaTable.getModel()).GetEIAInfo();
        NahonDevMap.DevType devtype = NahonDevMap.GetDevTypeByName(eia.DeviceName);
        if (devtype == null) {
            TextArea_Info.setText("无法识别的设备类型，不能创建序列号");
        } else {
            try {
                //根据设备类型，创建序列号，创建序列号，需要连接数据库查询历史记录
                eia.BuildSerialNum = ForgeSystem.GetInstance().eiaBuilder.BuildSerialID(devtype);
                //更新创建日期
                eia.BuildDate = new SimpleDateFormat("yyyyMMdd").format(new Date());
                //刷新到界面
                devEiaTable.setModel(new EiaTableModel(eia));

                TextArea_Info.setText("创建序列号成功！");
            } catch (Exception ex) {
                TextArea_Info.setText("无法连接数据库" + ex.toString());
            }
        }
    }//GEN-LAST:event_Button_BuildSerialActionPerformed

    private void Button_OpenPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_OpenPathActionPerformed
        if (ForgeSystem.GetInstance().eiaBuilder.IsServerEnable()) {
            return;
        }

        try {
            File path = new File(ForgeSystem.GetInstance().eiaBuilder.GetFileDB().FileDir);
            // TODO add your handling code here:
            Runtime.getRuntime().exec("explorer.exe " + path.getCanonicalPath());
        } catch (IOException ex) {
            Logger.getLogger(EIASetupPane.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button_OpenPathActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_BuildSerial;
    private javax.swing.JButton Button_EiaBuildConfig;
    private javax.swing.JButton Button_OpenPath;
    private javax.swing.JButton Button_Set;
    private javax.swing.JPanel DevicePanel;
    private javax.swing.JList InfoList;
    private javax.swing.JTextArea TextArea_Info;
    private javax.swing.JTextField TextField_DevAddr;
    private javax.swing.JTextField TextField_company;
    private javax.swing.JTable devEiaTable;
    private javax.swing.JScrollPane eiaTablePane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
