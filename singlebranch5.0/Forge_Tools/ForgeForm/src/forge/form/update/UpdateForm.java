/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package forge.form.update;

import forge.bill.dev.NahonDevControl;
import forge.form.binfactory.BinFileHeadModel;
import forge.form.other.EiaTableModel;
import forge.bill.platform.ForgeSystem;
import forge.form.other.InitPaneHelper;
import java.io.File;
import java.io.FileInputStream;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import nahon.drv.data.UpdateFileHead;
import nahon.drv.update.IProcess;

/**
 *
 * @author jiche
 */
public class UpdateForm extends javax.swing.JPanel {

    /**
     * Creates new form UpdateForm
     */
    java.awt.Frame parent = null;

    public UpdateForm(java.awt.Frame parent) {
        this.parent = parent;

        initComponents();

        updataProcess.setMaximum(100);
        updataProcess.setMinimum(0);
    }

    public void UpdateEIA() {
        EiaTableModel model = new EiaTableModel(ForgeSystem.GetInstance().devControl.GetEquipmentInfo());
        model.EnableEditable(false);
        DeviceHeadTable.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        InfoList = new javax.swing.JList();
        DevicePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DeviceHeadTable = new javax.swing.JTable();
        FilePanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        FileHeadTable = new javax.swing.JTable();
        OpenFile = new javax.swing.JButton();
        FileBinPath = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        UpdatePanel = new javax.swing.JPanel();
        Start = new javax.swing.JButton();
        updataProcess = new javax.swing.JProgressBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        Label_UpdateState = new javax.swing.JTextArea();

        InfoList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(InfoList);

        DevicePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Device"));

        DeviceHeadTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "设备名称", "值"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(DeviceHeadTable);

        javax.swing.GroupLayout DevicePanelLayout = new javax.swing.GroupLayout(DevicePanel);
        DevicePanel.setLayout(DevicePanelLayout);
        DevicePanelLayout.setHorizontalGroup(
            DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        DevicePanelLayout.setVerticalGroup(
            DevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        FilePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("File"));

        FileHeadTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "设备名称", "值"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(FileHeadTable);

        OpenFile.setText("...");
        OpenFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpenFileMouseClicked(evt);
            }
        });

        FileBinPath.setEditable(false);

        jLabel2.setText("FilePath:");

        javax.swing.GroupLayout FilePanelLayout = new javax.swing.GroupLayout(FilePanel);
        FilePanel.setLayout(FilePanelLayout);
        FilePanelLayout.setHorizontalGroup(
            FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, FilePanelLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                    .addGroup(FilePanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FileBinPath, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        FilePanelLayout.setVerticalGroup(
            FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(FileBinPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(OpenFile))))
        );

        UpdatePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Update"));

        Start.setText(">");
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });

        Label_UpdateState.setColumns(20);
        Label_UpdateState.setRows(5);
        jScrollPane2.setViewportView(Label_UpdateState);

        javax.swing.GroupLayout UpdatePanelLayout = new javax.swing.GroupLayout(UpdatePanel);
        UpdatePanel.setLayout(UpdatePanelLayout);
        UpdatePanelLayout.setHorizontalGroup(
            UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdatePanelLayout.createSequentialGroup()
                .addComponent(updataProcess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Start))
            .addComponent(jScrollPane2)
        );
        UpdatePanelLayout.setVerticalGroup(
            UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdatePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addGap(3, 3, 3)
                .addGroup(UpdatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updataProcess, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                    .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(UpdatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(DevicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(FilePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(DevicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(FilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UpdatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private IProcess updateret;

    //开始升级
    private void StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartActionPerformed
        NahonDevControl devcontrol = ForgeSystem.GetInstance().devControl;

        Label_UpdateState.setText("开始升级!");
        this.updateret = devcontrol.UpdateDevice(new File(FileBinPath.getText()));

        if (this.updateret == null) {
            Label_UpdateState.setText("无法升级!");
            return;
        }

        //设置界面按钮状态
        SetFormState(true);
        Label_UpdateState.setText("正在升级!");

        //刷新进度条
        ForgeSystem.GetInstance().systemthreadpool.submit(new Runnable() {
            @Override
            public void run() {
                //重置进度条
                updataProcess.setValue(0);
                //刷新进度条
                while (!updateret.IsFinished()) {
                    updataProcess.setValue((int) (updateret.GetPecent() * 100));
                    try {
                        TimeUnit.MILLISECONDS.sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getGlobal().log(Level.SEVERE, null, ex);
                    }
                }
                //升级完成
                updataProcess.setValue(100);

                //检查升级结果
                if (!updateret.IsSucess()) {
                    Label_UpdateState.setText(Label_UpdateState.getText() + " \r\n升级失败! \r\n");
                } else {
                    Label_UpdateState.setText(Label_UpdateState.getText() + " \r\n升级成功!");
                }
                SetFormState(false);
            }
        });

    }//GEN-LAST:event_StartActionPerformed

    //获取升级文件
    private void OpenFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpenFileMouseClicked
        File file = InitPaneHelper.GetFilePath(".nuf");
        if (file != null) {
            try {
                //获取升级文件头信息
                FileInputStream updatefileStream = new FileInputStream(file);
                byte[] headbuffer = new byte[UpdateFileHead.BinFileHeadLength];
                updatefileStream.read(headbuffer);
                UpdateFileHead updateInfo = new UpdateFileHead(headbuffer);
                //显示升级文件头信息
                BinFileHeadModel model = new BinFileHeadModel(updateInfo);
                model.canModify = false;
                this.FileHeadTable.setModel(model);

                //显示升级包路径
                this.FileBinPath.setText(file.getAbsolutePath());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "无法读取升级文件!" + ex.toString());
            }
        }
    }//GEN-LAST:event_OpenFileMouseClicked

    private void SetFormState(boolean value) {
        this.Start.setEnabled(!value);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DeviceHeadTable;
    private javax.swing.JPanel DevicePanel;
    private javax.swing.JTextField FileBinPath;
    private javax.swing.JTable FileHeadTable;
    private javax.swing.JPanel FilePanel;
    private javax.swing.JList InfoList;
    private javax.swing.JTextArea Label_UpdateState;
    private javax.swing.JButton OpenFile;
    private javax.swing.JButton Start;
    private javax.swing.JPanel UpdatePanel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JProgressBar updataProcess;
    // End of variables declaration//GEN-END:variables
}
