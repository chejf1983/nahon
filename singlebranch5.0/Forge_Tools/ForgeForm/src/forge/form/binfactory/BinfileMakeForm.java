/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package forge.form.binfactory;

import forge.bill.platform.ForgeSystem;
import forge.form.other.InitPaneHelper;
import forge.bill.binfactory.UpdateFileBuilder;
import forge.bill.binfactory.UpdateFileBuilder.BinMakeState;
import forge.bill.eia.builder.NahonDevMap;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.table.TableCellEditor;
import nahon.drv.data.UpdateFileHead;

/**
 *
 * @author jiche
 */
public class BinfileMakeForm extends javax.swing.JPanel {

    private ArrayList<File> inputfile = new ArrayList();
    private UpdateFileBuilder binFileMaker = new UpdateFileBuilder();
    private java.awt.Frame parent = null;

    /**
     * Creates new form BinfileMakeForm
     */
    public BinfileMakeForm(java.awt.Frame parent) {
        this.parent = parent;
        initComponents();

        //初始化进度条
        ProgressBar.setMaximum(100);
        ProgressBar.setMinimum(0);

        this.initInternalEiaTable();
        FileHeadTable.setModel(new BinFileHeadModel(new UpdateFileHead()));
    }

    
    private JComboBox devnamelist;

    //初始化eia框
    private void initInternalEiaTable() {
        //设置默认设备名称下拉列表
        devnamelist = new JComboBox();
        for (NahonDevMap.DevType type : NahonDevMap.DevType.values()) {
            devnamelist.addItem(NahonDevMap.GetName(type));
        }

        devnamelist.setEditable(true);
        devnamelist.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    //重新选择设备名称后,更新设备表格中设备名称
                    UpdateFileHead filehead = ((BinFileHeadModel) FileHeadTable.getModel()).GetFileHead();
                    filehead.DeviceName = devnamelist.getSelectedItem().toString();
                    FileHeadTable.setModel(new BinFileHeadModel(filehead));
                }
            }
        });

        //更新eia信息框
        this.FileHeadTable = new JTable() {
            @Override
            public TableCellEditor getCellEditor(int row, int column) {
                if (row == 0 && column == 1) {
                    return new DefaultCellEditor(devnamelist);
                } else {
                    return super.getCellEditor(row, column);
                }
            }
        };

        this.eiaTablePane.setViewportView(FileHeadTable);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BrowerFile = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        InformationBox = new javax.swing.JTextArea();
        MakeFile = new javax.swing.JButton();
        ProgressBar = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        eiaTablePane = new javax.swing.JScrollPane();
        FileHeadTable = new javax.swing.JTable();
        CleanFile = new javax.swing.JButton();
        Button_Canncel = new javax.swing.JButton();

        BrowerFile.setText("增加bin");
        BrowerFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowerFileActionPerformed(evt);
            }
        });

        InformationBox.setColumns(20);
        InformationBox.setRows(5);
        jScrollPane2.setViewportView(InformationBox);

        MakeFile.setText("开始压缩");
        MakeFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MakeFileActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "FileHead", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel1.setToolTipText("");

        FileHeadTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        eiaTablePane.setViewportView(FileHeadTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(eiaTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(eiaTablePane, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        CleanFile.setText("清除");
        CleanFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CleanFileActionPerformed(evt);
            }
        });

        Button_Canncel.setText("取消");
        Button_Canncel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_CanncelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BrowerFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CleanFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MakeFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Button_Canncel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MakeFile)
                    .addComponent(BrowerFile)
                    .addComponent(CleanFile)
                    .addComponent(Button_Canncel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BrowerFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowerFileActionPerformed
        File file = InitPaneHelper.GetFilePath(".bin");

        //如果是添加第一个文件，清除历史屏幕记录
        if (this.inputfile.isEmpty()) {
            this.InformationBox.setText("");
        }

        //增加输入文件
        if (file != null) {
            this.inputfile.add(file);
            this.InformationBox.setText(InformationBox.getText()
                    + "\r\n 添加新文件-" + this.inputfile.size()
                    + "\r\n" + file.getAbsolutePath() + "\r\n");
        }
    }//GEN-LAST:event_BrowerFileActionPerformed


    private void MakeFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MakeFileActionPerformed
        File outfile = InitPaneHelper.GetFilePath(".nuf");
        try {
            //开始制作进程
            binFileMaker.CompressBinFiles(inputfile.toArray(new File[0]),
                    outfile, ((BinFileHeadModel) this.FileHeadTable.getModel()).GetFileHead());
            //清除输入file
            inputfile.clear();
            //重置进度条
            ProgressBar.setValue(0);

            //打印提示信息
            this.InformationBox.setText(InformationBox.getText() + "开始压缩bin文件" + "\r\n");
            //启动进度条跟踪进程
            ForgeSystem.GetInstance().systemthreadpool.submit(new Runnable() {
                @Override
                public void run() {
                    UpdateFileBuilder binmake = binFileMaker;
                    //在进行状态下轮询进度
                    while (binmake.GetState() == BinMakeState.Process) {
                        ProgressBar.setValue(binmake.GetProcessPecent());
                        //等待100ms
                        try {
                            TimeUnit.MILLISECONDS.sleep(100);
                        } catch (InterruptedException ex) {
                        }
                    }
                    //最终设置进度满
                    ProgressBar.setValue(100);
                    //检查执行结果
                    if (binmake.GetState() == BinMakeState.Success) {
                        InformationBox.setText(InformationBox.getText() + "制作成功!\r\n");
                    } else {
                        InformationBox.setText(InformationBox.getText() + "制作失败!\r\n"
                                + binmake.GetLastException().toString() + "\r\n");
                    }
                }
            });
        } catch (Exception ex) {
            //制作异常
            Logger.getGlobal().log(Level.SEVERE, null, ex);
            InformationBox.setText(InformationBox.getText() + "制作失败!\r\n" + ex.toString() + "\r\n");
        }
    }//GEN-LAST:event_MakeFileActionPerformed

    private void clearinput() {
        inputfile.clear();
        ProgressBar.setValue(0);
        InformationBox.setText("");
    }

    //清除所有输入
    private void CleanFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CleanFileActionPerformed
        this.clearinput();
    }//GEN-LAST:event_CleanFileActionPerformed

    private void Button_CanncelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_CanncelActionPerformed
        binFileMaker.Cancel();
    }//GEN-LAST:event_Button_CanncelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BrowerFile;
    private javax.swing.JButton Button_Canncel;
    private javax.swing.JButton CleanFile;
    private javax.swing.JTable FileHeadTable;
    private javax.swing.JTextArea InformationBox;
    private javax.swing.JButton MakeFile;
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JScrollPane eiaTablePane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
