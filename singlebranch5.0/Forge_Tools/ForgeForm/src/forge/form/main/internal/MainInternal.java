/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package forge.form.main.internal;

import forge.bill.dev.NahonDevControl;
import forge.bill.dev.NahonDevControl.ControlState;
import forge.form.other.CommInfoDialog;
import forge.form.binfactory.BinfileMakeForm;
import forge.form.seteia.EIASetupPane;
import forge.bill.platform.ForgeSystem;
import forge.form.debug.DebugPane;
import forge.form.languange.LanguageForm;
import forge.form.seteia.DBConfig;
import forge.form.update.UpdateForm;
import java.awt.CardLayout;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import nahon.comm.event.Event;
import nahon.comm.faultsystem.FaultCenter;
import nahon.comm.io.libs.WindowsIOFactory;

/**
 *
 * @author jiche
 */
public class MainInternal extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainInternal() {
        initComponents();
        //居中显示
        setLocationRelativeTo(null);

        this.InitSystem();
    }

    private BinfileMakeForm binform;
    private LanguageForm lanform;
    private UpdateForm upform;
    private EIASetupPane eiaform;
    private InternalAbout aboutform;
    private DebugPane debugpane;
    
    private CardLayout workScreenLayout = new CardLayout();

    private void InitSystem() {
        try {            
            WindowsIOFactory.InitWindowsIODriver();
            
            //初始化系统
            ForgeSystem.GetInstance().initSystem();
            ForgeSystem.GetInstance().systemConfig.SetInternalFlag(true);

            FaultCenter.Instance().RegisterEvent(new nahon.comm.event.EventListener<Level>() {
                @Override
                public void recevieEvent(Event<Level> event) {
                    JOptionPane.showMessageDialog(null, event.Info().toString(), "错误信息", ERROR_MESSAGE);
                }
            });

            binform = new BinfileMakeForm(this);
            lanform = new LanguageForm(this);
            upform = new UpdateForm(this);
            eiaform = new EIASetupPane(this);
            aboutform = new InternalAbout();
            debugpane = new DebugPane();

            this.MainAera.setLayout(workScreenLayout);
            this.MainAera.add(binform.getClass().getName(), binform);
            this.MainAera.add(lanform.getClass().getName(), lanform);
            this.MainAera.add(upform.getClass().getName(), upform);
            this.MainAera.add(eiaform.getClass().getName(), eiaform);
            this.MainAera.add(debugpane.getClass().getName(), debugpane);
            this.MainAera.add(aboutform.getClass().getName(), aboutform);
            workScreenLayout.show(this.MainAera, aboutform.getClass().getName());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "系统初始化失败！ \r\n" + ex.toString());
            Logger.getGlobal().log(Level.SEVERE, null, ex);
            System.exit(0);
        }

        ForgeSystem.GetInstance().devControl.StateCenter.RegeditListener(new nahon.comm.event.EventListener<ControlState>() {
            @Override
            public void recevieEvent(Event<ControlState> event) {
                if (event.GetEvent() == ControlState.CONNECT) {
                    Menu_EIA.setEnabled(true);
                    Menu_Update.setEnabled(true);
                    Menu_Debug.setEnabled(true);
                    eiaform.UpdateEIA();
                    workScreenLayout.show(MainAera, eiaform.getClass().getName());
                }

                if (event.GetEvent() == ControlState.DISCONNECT) {
                    Menu_EIA.setEnabled(false);
                    Menu_Update.setEnabled(false);
                    Menu_Debug.setEnabled(false);
                    workScreenLayout.show(MainAera, aboutform.getClass().getName());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        MainAera = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        OpenDevice = new javax.swing.JMenuItem();
        MenuItem_DBset = new javax.swing.JMenuItem();
        MenuItem_Close = new javax.swing.JMenuItem();
        Menu_Open = new javax.swing.JMenu();
        Menu_EIA = new javax.swing.JMenu();
        Menu_MakeBin = new javax.swing.JMenu();
        Menu_Update = new javax.swing.JMenu();
        Menu_Debug = new javax.swing.JMenu();
        Menu_About = new javax.swing.JMenu();

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Forge(Internal)");
        setIconImage(Toolkit.getDefaultToolkit().createImage(getClass().getResource("/forge/form/resource/FormIcon.png")));

        javax.swing.GroupLayout MainAeraLayout = new javax.swing.GroupLayout(MainAera);
        MainAera.setLayout(MainAeraLayout);
        MainAeraLayout.setHorizontalGroup(
            MainAeraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 342, Short.MAX_VALUE)
        );
        MainAeraLayout.setVerticalGroup(
            MainAeraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 536, Short.MAX_VALUE)
        );

        jMenu1.setText("设置");

        OpenDevice.setText("搜索新设备");
        OpenDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenDeviceActionPerformed(evt);
            }
        });
        jMenu1.add(OpenDevice);

        MenuItem_DBset.setText("数据库设置");
        MenuItem_DBset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItem_DBsetActionPerformed(evt);
            }
        });
        jMenu1.add(MenuItem_DBset);

        MenuItem_Close.setText("关闭");
        MenuItem_Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuItem_CloseMouseClicked(evt);
            }
        });
        MenuItem_Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItem_CloseActionPerformed(evt);
            }
        });
        jMenu1.add(MenuItem_Close);

        jMenuBar1.add(jMenu1);

        Menu_Open.setText("连接");
        Menu_Open.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_OpenMouseClicked(evt);
            }
        });
        jMenuBar1.add(Menu_Open);

        Menu_EIA.setText("设置参数");
        Menu_EIA.setEnabled(false);
        Menu_EIA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_EIAMouseClicked(evt);
            }
        });
        jMenuBar1.add(Menu_EIA);

        Menu_MakeBin.setText("制作升级包");
        Menu_MakeBin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_MakeBinMouseClicked(evt);
            }
        });
        jMenuBar1.add(Menu_MakeBin);

        Menu_Update.setText("升级");
        Menu_Update.setEnabled(false);
        Menu_Update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_UpdateMouseClicked(evt);
            }
        });
        jMenuBar1.add(Menu_Update);

        Menu_Debug.setText("调试");
        Menu_Debug.setEnabled(false);
        Menu_Debug.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_DebugMouseClicked(evt);
            }
        });
        jMenuBar1.add(Menu_Debug);

        Menu_About.setText("关于");
        Menu_About.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Menu_AboutMouseClicked(evt);
            }
        });
        jMenuBar1.add(Menu_About);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainAera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainAera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OpenDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenDeviceActionPerformed
        ForgeSystem.GetInstance().devControl.DisConnect();

        if (ForgeSystem.GetInstance().devControl.State() == NahonDevControl.ControlState.DISCONNECT) {
            CommInfoDialog dilog = new CommInfoDialog(this, true);
            dilog.setVisible(true);
            if (dilog.GetIOInfo() != null) {
                ForgeSystem.GetInstance().devControl.Connect(dilog.GetIOInfo(), dilog.GetAddr());
            }
        }

    }//GEN-LAST:event_OpenDeviceActionPerformed

    private void Menu_MakeBinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_MakeBinMouseClicked
        workScreenLayout.show(this.MainAera, binform.getClass().getName());
    }//GEN-LAST:event_Menu_MakeBinMouseClicked

    private void Menu_UpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_UpdateMouseClicked
        workScreenLayout.show(this.MainAera, upform.getClass().getName());
    }//GEN-LAST:event_Menu_UpdateMouseClicked

    private void Menu_EIAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_EIAMouseClicked
        workScreenLayout.show(this.MainAera, eiaform.getClass().getName());
    }//GEN-LAST:event_Menu_EIAMouseClicked

    private void Menu_AboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_AboutMouseClicked
        //new About(this, true).setVisible(true);
        workScreenLayout.show(this.MainAera, aboutform.getClass().getName());
    }//GEN-LAST:event_Menu_AboutMouseClicked

    private void Menu_OpenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_OpenMouseClicked
        ForgeSystem.GetInstance().devControl.DisConnect();

        if (ForgeSystem.GetInstance().devControl.State() == NahonDevControl.ControlState.DISCONNECT) {
            ForgeSystem.GetInstance().devControl.Connect();
        }
    }//GEN-LAST:event_Menu_OpenMouseClicked

    private void MenuItem_CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuItem_CloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_MenuItem_CloseMouseClicked

    private void MenuItem_CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItem_CloseActionPerformed
        ForgeSystem.GetInstance().devControl.DisConnect();
        if (ForgeSystem.GetInstance().devControl.State() == NahonDevControl.ControlState.DISCONNECT) {
            workScreenLayout.show(this.MainAera, "empty");
        }
    }//GEN-LAST:event_MenuItem_CloseActionPerformed

    private void MenuItem_DBsetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItem_DBsetActionPerformed
        DBConfig dbconfig = new DBConfig(this, false);
        dbconfig.SetDBIntance(ForgeSystem.GetInstance().eiaBuilder);
        dbconfig.setVisible(true);
    }//GEN-LAST:event_MenuItem_DBsetActionPerformed

    private void Menu_DebugMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Menu_DebugMouseClicked
        workScreenLayout.show(this.MainAera, debugpane.getClass().getName());
    }//GEN-LAST:event_Menu_DebugMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainInternal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainInternal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainAera;
    private javax.swing.JMenuItem MenuItem_Close;
    private javax.swing.JMenuItem MenuItem_DBset;
    private javax.swing.JMenu Menu_About;
    private javax.swing.JMenu Menu_Debug;
    private javax.swing.JMenu Menu_EIA;
    private javax.swing.JMenu Menu_MakeBin;
    private javax.swing.JMenu Menu_Open;
    private javax.swing.JMenu Menu_Update;
    private javax.swing.JMenuItem OpenDevice;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
