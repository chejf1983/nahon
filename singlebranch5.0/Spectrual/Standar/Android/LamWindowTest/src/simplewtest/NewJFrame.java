/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simplewtest;

import java.util.logging.Level;
import javax.swing.JOptionPane;
import lam.devcontrol.ifs.ISPDataCollect;
import lam.devcontrol.ifs.ISPDevControl;
import lam.devcontrol.ifs.ISPDevControl.CSTATE;
import lam.faultcenter.FaultCenter;
import lam.faultcenter.SYSLOG;
import nahon.absractio.AbstractIO;
import nahon.comm.event.Event;
import nahon.comm.event.EventListener;
import nahon.comm.io.libs.WindowsIOFactory;
import spdev.dev.data.DataCollectPar;
import static spdev.dev.data.DataCollectPar.LowVolt;
import static spdev.dev.data.DataCollectPar.SoftMode;
import sps.system.SPDevSystem;

/**
 *
 * @author jiche
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();

        this.initSystem();
    }

    private void initSystem() {
        SYSLOG.getLog().SetLogPath("./log");
        //注册设备响应
        SPDevSystem.GetInstance().spdevcontrol.RegisterStateChange(new EventListener<CSTATE>() {
            @Override
            public void recevieEvent(Event<CSTATE> event) {
                jLabel2.setText(
                        SPDevSystem.GetInstance().dev_manager.GetDeviceList().get(0).eia.DeviceName
                        + "  "
                        + SPDevSystem.GetInstance().spdevcontrol.GetControlState());
            }
        });
        FaultCenter.getReporter().RegisterFaultEvent(new EventListener<Level>() {
            @Override
            public void recevieEvent(Event<Level> event) {
                JOptionPane.showMessageDialog(null, event.GetEvent() + ":" + event.Info());
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        spectralChartPane1 = new AppCommon.SPDataChart.SpectralChartPane();
        jButton3 = new javax.swing.JButton();
        Text_Ainput = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        Text_Iinput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Device Info:");

        jLabel2.setText("null");

        jButton3.setText("test");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        Text_Ainput.setText("1");

        jToggleButton1.setText("monitor");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        Text_Iinput.setText("1");

        jLabel3.setText("积分时间:");

        jLabel4.setText("平均次数:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spectralChartPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(161, 161, 161))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Text_Iinput, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Text_Ainput, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jToggleButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(Text_Iinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Text_Ainput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spectralChartPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //获取IO信息
        CommInfoDialog dlg = new CommInfoDialog(this, true);
        dlg.setVisible(true);

        //创建windows io 实例
        AbstractIO io = WindowsIOFactory.CreateIO(dlg.GetIOInfo());
        //搜索io
        SPDevSystem.GetInstance().dev_manager.StartSearchIO(new AbstractIO[]{io}, true);

        //如果找到设备
        if (SPDevSystem.GetInstance().dev_manager.GetDeviceList().size() > 0) {

            ISPDevControl control = SPDevSystem.GetInstance().spdevcontrol;
            //连接设备
            if (control.Open(SPDevSystem.GetInstance().dev_manager.GetDeviceList().get(0))) {
                //如果连接成功，注册数据响应事件
                control.GetDataCollecor().RegisterDataCollectListener(new EventListener<spdev.dev.data.SpectralDataPacket>() {
                    @Override
                    public void recevieEvent(Event<spdev.dev.data.SpectralDataPacket> event) {
                        //刷新数据图表
                        spectralChartPane1.DisplaySPData("main", event.GetEvent().ADValue);
                    }
                });
            }
        } else {
            JOptionPane.showMessageDialog(null, "没有找到设备");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ISPDataCollect collector = SPDevSystem.GetInstance().spdevcontrol.GetDataCollecor();
        if (collector != null) {
            DataCollectPar par = new DataCollectPar(Float.valueOf(Text_Iinput.getText()), Integer.valueOf(Text_Ainput.getText()), SoftMode);
            collector.StartSingleTest(par);
        } else {
            JOptionPane.showMessageDialog(this, "没有连接设备");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        ISPDataCollect collector = SPDevSystem.GetInstance().spdevcontrol.GetDataCollecor();
        if (jToggleButton1.isSelected()) {
            if (collector != null) {
                DataCollectPar par = new DataCollectPar(
                        Float.valueOf(Text_Iinput.getText()),
                        Integer.valueOf(Text_Ainput.getText()),
                        LowVolt);
                jToggleButton1.setSelected(collector.StartSustainCollect(par, 1));
            } else {
                JOptionPane.showMessageDialog(this, "没有连接设备");
            }
        } else {
            if (collector != null) {
                collector.StopCollectData();
            } else {
                JOptionPane.showMessageDialog(this, "没有连接设备");
            }
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        SPDevSystem.GetInstance().spdevcontrol.Delete();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Text_Ainput;
    private javax.swing.JTextField Text_Iinput;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JToggleButton jToggleButton1;
    private AppCommon.SPDataChart.SpectralChartPane spectralChartPane1;
    // End of variables declaration//GEN-END:variables
}
