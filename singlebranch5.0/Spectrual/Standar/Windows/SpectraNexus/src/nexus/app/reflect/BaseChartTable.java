/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nexus.app.reflect;

import nexus.app.absorbe.*;
import chart.data.CSPData;
import chart.spchart.panel.SpectralChartPane;
import java.awt.CardLayout;
import javax.swing.JSplitPane;
import sps.dev.data.SSPData;
import table.data.TSPData;
import table.std.SPDataTablePane;

/**
 *
 * @author Administrator
 */
public class BaseChartTable extends javax.swing.JPanel {
    private String tablename = "OraTable";
    private String chartname = "OraChart";
    private String mainlinename = "current";
    private String baselinename = "base";
    /**
     * Creates new form BaseChartTable
     */
    public BaseChartTable() {
        initComponents();
   
        this.InitOriginalPane();
    }

    // <editor-fold defaultstate="collapsed" desc="Original Init">    
    public SPDataTablePane dataTablePane = new SPDataTablePane();
    public SpectralChartPane dataChartPane = new SpectralChartPane();
    private JSplitPane originalSplit;

    private void InitOriginalPane() {
        /* Init table pane */
        this.dataTablePane.SetTitle(tablename, "Original");

        /* Init chart pane */
        this.dataChartPane.SetTitle(chartname);
        this.dataChartPane.SetMaxRange(65535, -1000);

        /* Init split pane */
        this.originalSplit = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, dataChartPane, null);
        this.originalSplit.setResizeWeight(1.0);

        /* Init Display Area */
        this.setLayout(new CardLayout());
        this.add(originalSplit);
    }

    //display data table and watch tabel, draw chart
    public void DisplayMainData(SSPData data) {
        this.dataTablePane.UpdateData(new TSPData(data.waveIndex, data.datavalue));
        this.dataChartPane.DisplaySPData(mainlinename, new CSPData(data.waveIndex, data.datavalue));
    }

    //display base light 
    public void DisplayBaseData(SSPData data) {
        if (data != null) {
            this.dataChartPane.DisplaySnapShot(new String[]{baselinename}, 
                    new CSPData[]{new CSPData(data.waveIndex, data.datavalue)});
        } else {
            this.dataChartPane.DisplaySnapShot(null, null);
        }
    }

    public void SetTableVisible(boolean value) {
        if (value) {
            originalSplit.setRightComponent(dataTablePane);
        } else {
            originalSplit.setRightComponent(null);
        }
    }
    // </editor-fold> 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
