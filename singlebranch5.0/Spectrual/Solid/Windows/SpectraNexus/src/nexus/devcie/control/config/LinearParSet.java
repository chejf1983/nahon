/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nexus.devcie.control.config;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import nahon.comm.tool.languange.LanguageHelper;
import nexus.main.compent.FileDialogHelp;
import sps.app.ora.LinearParameterHelper;
import sps.dev.control.ifs.ISPDevConfig;

/**
 *
 * @author Administrator
 */
public class LinearParSet extends javax.swing.JPanel {

    /**
     * Creates new form ULPSetPanel
     */
    public LinearParSet() {
        initComponents();
        this.Button_Import.setText(LanguageHelper.getIntance().GetText("Import"));
        this.Button_Export.setText(LanguageHelper.getIntance().GetText("Export"));
    }
    private ISPDevConfig devconfig;

    public void SetCollector(ISPDevConfig config) {
        this.devconfig = config;

        //初始化
        File file = new File("tmp.NCC");
        try {
            LinearParameterHelper.WriteLinearParameter(devconfig.GetLinearParameter(), file);
            ShowFile(file);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            Logger.getLogger(LinearParSet.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            file.delete();
        }
    }

    //文件显示成txt
    private void ShowFile(File file) {
        try {
            String encoding = "GBK";
            if (file.isFile() && file.exists()) { //判断文件是否存在
                InputStreamReader read = new InputStreamReader(
                        new FileInputStream(file), encoding);//考虑到编码格式
                BufferedReader bufferedReader = new BufferedReader(read);
                String lineTxt = null;
                while ((lineTxt = bufferedReader.readLine()) != null) {
                    this.TextArea_LinearValue.setText(this.TextArea_LinearValue.getText() + lineTxt);
                }
                read.close();
            } else {
                System.out.println("找不到指定的文件");
            }
        } catch (Exception e) {
            System.out.println("读取文件内容出错");
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        Button_Import = new javax.swing.JButton();
        Button_Export = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea_LinearValue = new javax.swing.JTextArea();

        jToggleButton1.setText("jToggleButton1");

        Button_Import.setText("import");
        Button_Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_ImportActionPerformed(evt);
            }
        });

        Button_Export.setText("export");
        Button_Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_ExportActionPerformed(evt);
            }
        });

        TextArea_LinearValue.setEditable(false);
        TextArea_LinearValue.setColumns(20);
        TextArea_LinearValue.setRows(5);
        jScrollPane1.setViewportView(TextArea_LinearValue);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(165, Short.MAX_VALUE)
                .addComponent(Button_Import, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Button_Export, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Button_Import)
                    .addComponent(Button_Export, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Button_ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_ImportActionPerformed
        File file = FileDialogHelp.GetFilePath(LinearParameterHelper.fileEndMark);
        if (file == null) {
            return;
        }
        try {
            devconfig.SetLinearParameter(LinearParameterHelper.ReadLinearParameter(file));
            this.ShowFile(file);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            Logger.getLogger(LinearParSet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button_ImportActionPerformed

    private void Button_ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_ExportActionPerformed
        File file = FileDialogHelp.GetFilePath(LinearParameterHelper.fileEndMark);
        if (file == null) {
            return;
        }
        try {
            LinearParameterHelper.WriteLinearParameter(devconfig.GetLinearParameter(), file);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            Logger.getLogger(LinearParSet.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button_ExportActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_Export;
    private javax.swing.JButton Button_Import;
    private javax.swing.JTextArea TextArea_LinearValue;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
